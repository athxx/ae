[workspace]
resolver = "2"
members = ["api", "admin", "home", "web", "core", "utils", "prisma/prisma-cli", "redorm"]

[workspace.package]
authors = ["Athan <athan.seal@gmail.com>"]
edition = "2021"
homepage = "https://athanx.com/"
license = "Apache-2.0"
publish = false
repository = ""
version = "0.1.0"
keywords = ["example", "cargo", "mastering"]
description = "amigo description"
documentation = "https://docs.rs/amigo"
readme = "README.md"


[profile.release]
codegen-units = 1
debug = false
lto = true
opt-level = "z"   # Optimize for size.
panic = 'abort'
strip = true
rustflags = ["-Z", "threads=8"]
# strip = "symbols" # none(false) debuginfo symbols(true).

[workspace.dev-dependencies]
clickhouse = { version = "0.11.6", features = ["test-util"] }
# httpc-test = "0.1"
# serial_test = "2"


[workspace.dependencies]
# base
axum = { version = "0.7.4", features = ["multipart", "ws"] }
axum-extra = "0.9.2"
axum-server = "0.6.0"
#axum-tungstenite="0"
tokio = "1.36.0"
dotenvy = "0.15.7"

# template render for SSR
### BENCHMARK  https://github.com/rosetta-rs/template-benchmarks-rs
sailfish = "0.8.3"
smallvec = "1.13.1"

# encryption and serialization
aes = "0.8.3"
md5 = "0.7.0"
uuid = "1.6.1"
rand = "0"
serde = "1"
serde_json = "1"
serde_derive = "1"
serde_with = "*"
scru128 = "*"
elliptic-curve = "0.13.5" # ecc

# database configuration
prisma-client-rust = { git = "https://github.com/Brendonovich/prisma-client-rust", tag = "0.6.11" }
prisma-client-rust-cli = { git = "https://github.com/Brendonovich/prisma-client-rust", tag = "0.6.11", features = [
    "migrations",
    # "sqlite",
    "postgresql",
    "mysql",
    # "mongodb",
    # "mssql",
] }
clickhouse = "0.11.6"

# tools
reqwest = "*"
captcha_rust = "*"
captcha-rs = "0"
user-agent-parser = "0"
headers = "0"
jsonwebtoken = "*"
once_cell = "1"
bytes = "1"
tower = { version = "0" }                           #  features = ["fs"]
tower-http = { version = "0", features = ["cors"] }
xdb = "*"                                           # https://github.com/lionsoul2014/ip2region
futures = "0"
lettre = "*"                                        # send email

# validator
validator = "0.16.1"
validator_derive = "0.16.0"

# cache
redis = { version = "^0.24.0" } # tokio-comp, tokio-native-tls-comp
cached = { version = "0", features = [
    "redis_store",
    "redis_async_std",
    "async",
] } # seems better than moka
# mini_moka = "0.10" # more slim and functionless
moka = "*"

# message queue
tokio-nsq = "0.14.0" # I choose nsq instead of kafka, cause nsq already can fit for our bussiness

# search
meilisearch-sdk = "0.24.1"

# time
chrono = "0.4.33"
speedate = "0.13.0"
delay_timer = "0.11.5"
time = "0.3.34"

# log
log = "*"
fast_log = { version = "*", features = ["lz4", "zip", "gzip"] }
anyhow = "1"
tracing = "0"
tracing-appender = "0"
# tracing-log = "0.1"
tracing-subscriber = "0"

#ws
#futures-channel = "0.3.21"
futures-util = "*"
#tokio-tungstenite = "*"

# s3
aws-config = "*"
aws-sdk-s3 = "*"


# tools
ravif = "*"  # avif image format convert
hmac = "*"
sha2 = "*"
base64 = "*"